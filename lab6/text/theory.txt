TCP — Transmission Control Protocol

Установка соединения
Server: пассивное открытие (passive open)
Client: активное открытие (active open), отправив серверному приложению синхронизирующий порядковый номер (SYN)
S:      отправить клиенту подтверждение (ACK) вместе с порядковым номером (SYN) сервера
C:      отвечает АСК


TCP — это сложный, но надежный, требующий больших затрат времени протокол
Однонаправленное (unicast) 

Протокол TCP определен в RFC 793.

------------------------------
UDP — User Datagram Protocol

Быстрый, Простой, Ненадежный, Не требует соединения, Нет порядка, Не гарантирует целостность

Однонаправленное (unicast) 
Широковещательная передача (broadcast)
Групповая рассылка (multicast) 

Протокол UDP определен в RFC 786.

-------------------------------
Socket
Для работы с сетью на низком уровне традиционно используют сокеты. 
Сокет — это абстракция, которая позволяет работать с сетевыми ресурсами, как с файлами. 
Мы можем писать и читать данные из сокета почти так же, как из обычного файла.

-------------------------------
bind
Для привязки конкретного адреса к сокету используется фукнция bind. 
Она принимает целочисленный идентификатор файлового дескриптора сокета, 
адрес (поле ai_addr из структуры addrinfo) и размер адреса в байтах (используется для поддержки IPv6).

-------------------------------
listen 
Подготовим сокет к принятию входящих соединений от клиентов. Это делается с помощью функции listen. 
Она принимает дескриптор слушающего сокета и максимальное количество одновременных соединений.
В случае ошибки, функция listen возращает значение константы SOCKET_ERROR. При успешном выполнении она вернет 0.

-------------------------------
accept
Функция accept ожидает запрос на установку TCP-соединения от удаленного хоста. 
В качестве аргумента ей передается дескриптор слушающего сокета.

При успешной установке TCP-соединения, для него создается новый сокет. 
Функция accept возвращает дескриптор этого сокета. 
Если произошла ошибка соединения, то возвращается значение INVALID_SOCKET. 

-------------------------------
recv
Получаем содержимое запроса

-------------------------------
send
Отправляем запрос

Закрывает сокет и разрывает все соединения с этим сокетом. 
В отличие от функции shutdown функция close может дожидаться окончания всех операций с сокетом,
обеспечивая "нормальное", а не аварийное закрытие соединений.

-------------------------------
shutdown
Эта функция используется для немедленного закрытия всех или части связей на сокет. 

-------------------------------
connect
Функция connect используется процессом-клиентом для установления связи с сервером. 








2 подключения
drop
